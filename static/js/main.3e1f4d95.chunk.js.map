{"version":3,"sources":["assets/images/iot.png","reducers/modules.js","reducers/notifications.js","reducers/moduleInfos.js","reducers/notificationInfos.js","reducers/moduleSubmit.js","reducers/index.js","api/api.js","sagas/modules.js","sagas/notifications.js","sagas/index.js","components/ui/Logo/Logo.js","components/Navigation/Header/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/Header/NavigationItems/NavigationItems.js","components/Navigation/Header/DropDownButton/DropDownButton.js","components/ui/BackDrop/BackDrop.js","hoc/Auxilary.js","components/Navigation/Header/DropDown/DropDown.js","components/Navigation/Header/Header.js","components/NewModule/FormHeader/FormHeader.js","components/NewModule/Form1/Form1.js","components/ui/LoadSprint2/LoadSprint2.js","components/NewModule/Form2/Form2.js","components/NewModule/NewModuleStatus/NewModuleState.js","containers/NewModule/NewModule.js","actions/index.js","components/MyModules/MyModule/MyModule.js","components/MyModules/PaginationItems/PaginationItem/PaginationItem.js","components/MyModules/PaginationItems/PaginationItems.js","components/ui/LoadingSprint/LoadingSprint.js","components/ui/ErrorMessage/ErrorMessage.js","containers/MyModules/MyModules.js","components/MyModuleDetails/ModuleInfos/ModuleInfos.js","components/MyModuleDetails/ModuleMonitor/ActivityDurationMonitor/ActivityDurationMonitor.js","components/MyModuleDetails/ModuleMonitor/ActivityStateMonitor/ActivityStateMonitor.js","components/MyModuleDetails/ModuleMonitor/DataMonitor/DataMonitor.js","components/MyModuleDetails/ModuleMonitor/TemperatureMonitor/TemperatureMonitor.js","components/MyModuleDetails/ModuleMonitor/ModuleMonitor.js","containers/MyModuleDetails/MyModuleDetails.js","components/Notifications/NotificationItem/NotificationItem.js","components/Notifications/NotificationsBody/NotificationsBody.js","containers/Notifications/Notifications.js","components/NotificationDetails/NotificationInfos/NotificationInfos.js","containers/NotificationDetails/NotificationDetails.js","components/Layout/Layout.js","containers/App.js","serviceWorker.js","index.js","assets/images/webreathe.png","assets/images/Error.svg","assets/images/moduleInfos.svg","assets/images/notification.svg","assets/images/notification1.svg"],"names":["module","exports","modules","state","loadingModules","countModules","pageModules","errorModules","action","type","page","models","Math","ceil","count","error","notifications","loadingNotifications","countNotifications","pageNotifications","errorNotifications","moduleInfos","loadingModule","temperatureHistory","activityStateHistory","dataExchangeHistory","errorModule","model","notificationInfos","notification","loadingNotification","errorNotification","console","log","moduleSubmit","submitting","errorSubmit","success","combineReducers","getModules","currentPage","a","async","fetch","response","json","jsonResponse","errorMessage","message","getNotifications","getModuleInfos","id","getNotificationInfos","createNewModule","method","headers","Accept","body","JSON","stringify","result","updateNotificationSeen","loadModules","loadModuleById","createModule","call","api","put","loadNotifications","loadNotificationById","root","all","takeLatest","logo","props","className","href","target","src","logoImage","navigationItem","to","link","activeStyle","color","fontWeight","exact","onClick","hide","title","navigationItems","clicked","dropDownButton","backDrop","closed","Aux","children","dropDown","attachedClasses","show","join","Header","dropDownIsVisible","showDropDownHandler","setState","prevState","this","add","Component","formHeader","navigate","style","phase","backgroundColor","form1IsValid","form2IsValid","form1","placeholder","value","name","onChange","text","form1Handler","required","number","description","disabled","loadSprint2","class","form2","width","height","temperature","selectItemsHandler","activityDuration","activityState","dataExchange","e","submit","newModuleStatus","trim","length","marginRight","marginTop","NewModule","phase2","changephaseHandler","isInt","x","isNaN","parseFloat","step","item","submitHandler","preventDefault","shouldMonitorData","shouldMonitorTemperature","shouldMonitorActivityState","shouldMonitorActivityDuration","clearSubmit","history","push","connect","dispatch","myModule","createdAt","paginationItem","index","paginationItems","Array","map","i","loadingSprint","errorImage","MyModules","changePageHandler","loading","key","created_at","loadModulesRequest","moduleInfosImage","activityDurationMonitor","activeHours","durationList","ele","isActive","data","datasets","labels","options","maintainAspectRatio","legend","display","position","align","fontColor","activityStateMonitor","activityStateList","data2","detectedAt","label","fill","borderColor","pointBorderColor","steppedLine","scales","yAxes","ticks","xAxes","gridLines","zeroLineColor","dataMonitor","sentData","dataList","recivedData","dates","data3","suggestedMin","suggestedMax","temperatureMonitor","temperatures","temperatureList","moduleMonitor","shouldMonitorDuration","MyModuleDetails","loadModule","match","params","loadModuleByIdRequest","notificationItem","classes","seen","notificationImage","notificationsBody","notificationDescription","Notifications","loadNotificationsRequest","NotificationDetails","loadNotification","loadNotificationByIdRequest","Layaout","path","component","App","Boolean","window","location","hostname","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","run","rootSagas","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3e1f4d95.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/iot.40217429.png\";","const modules= (state={modules:[],loadingModules:false,countModules:1,pageModules:1,errorModules:\"\"},action)=>{\r\n\tswitch(action.type){\r\n\t\tcase 'LOAD_MODULES_REQUEST':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmodules:[],\r\n\t\t\t\tloadingModules:true,\r\n\t\t\t\tpageModules:action.page,\r\n\t\t\t\terrorModules:\"\"\r\n\t\t\t}\r\n\t\tcase 'LOAD_MODULES_SUCCESS':\r\n\t\t\treturn{\r\n\t\t\t\t...state,\r\n\t\t\t\tmodules:action.models,\r\n\t\t\t\tloadingModules:false,\r\n\t\t\t\tcountModules:Math.ceil((action.count) / 10)\r\n\t\t\t}\r\n\t\tcase 'LOAD_MODULES_FAILED':\r\n\t\t\treturn{\r\n\t\t\t\t...state,\r\n\t\t\t\tloadingModules:false,\r\n\t\t\t\tcountModules:1,\r\n\t\t\t\tpageModules:1,\r\n\t\t\t\terrorModules:action.error\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\nexport default modules","const notifications= (state={notifications:[],loadingNotifications:false,countNotifications:1,pageNotifications:1,errorNotifications:\"\"},action)=>{\r\n\tswitch(action.type){\r\n\t\tcase 'LOAD_NOTIFICATIONS_REQUEST':\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tnotifications:[],\r\n\t\t\t\tloadingNotifications:true,\r\n\t\t\t\tpageNotifications:action.page,\r\n\t\t\t\terrorNotifications:\"\"\r\n\t\t\t}\r\n\t\tcase 'LOAD_NOTIFICATIONS_SUCCESS':\r\n\t\t\treturn{\r\n\t\t\t\t...state,\r\n\t\t\t\tnotifications:action.notifications,\r\n\t\t\t\tloadingNotifications:false,\r\n\t\t\t\tcountNotifications:Math.ceil((action.count) / 40)\r\n\t\t\t}\r\n\t\tcase 'LOAD_NOTIFICATIONS_FAILED':\r\n\t\t\treturn{\r\n\t\t\t\t...state,\r\n\t\t\t\tloadingNotifications:false,\r\n\t\t\t\tcountNotifications:1,\r\n\t\t\t\tpageNotifications:1,\r\n\t\t\t\terrorNotifications:action.error\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\nexport default notifications","const moduleInfos=(state={module:null,loadingModule:false,temperatureHistory:[],activityStateHistory:[],dataExchangeHistory:[],errorModule:\"\"},action)=>{\r\n\tswitch(action.type){\r\n\t\tcase 'LOAD_MODULE_BY_ID_REQUEST':\r\n\t\t\treturn {\r\n\t\t\t\tmodule:null,\r\n\t\t\t\tloadingModule:true,\r\n\t\t\t\ttemperatureHistory:[],\r\n\t\t\t\tactivityStateHistory:[],\r\n\t\t\t\tdataExchangeHistory:[],\r\n\t\t\t\terrorModule:\"\"\r\n\t\t\t}\r\n\t\tcase 'LOAD_MODULE_BY_ID_SUCCESS':\r\n\t\t\treturn{\r\n\t\t\t\t...state,\r\n\t\t\t\tmodule:action.model,\r\n\t\t\t\tloadingModule:false,\r\n\t\t\t\ttemperatureHistory:action.temperatureHistory,\r\n\t\t\t\tactivityStateHistory:action.activityStateHistory,\r\n\t\t\t\tdataExchangeHistory:action.dataExchangeHistory,\r\n\t\t\t}\r\n\t\tcase 'LOAD_MODULE_BY_ID_FAILED':\r\n\t\t\treturn{\r\n\t\t\t\t...state,\r\n\t\t\t\tloadingModule:false,\r\n\t\t\t\terrorModule:action.error\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\nexport default moduleInfos","const notificationInfos= (state={notification:null,module:null,loadingNotification:false,errorNotification:\"\"},action)=>{\r\n\tswitch(action.type){\r\n\t\tcase 'LOAD_NOTIFICATION_BY_ID_REQUEST':\r\n\r\n\t\t\treturn {\r\n\t\t\t\tnotification:null,\r\n\t\t\t\tmodule:null,\r\n\t\t\t\tloadingNotification:true,\r\n\t\t\t\terrorNotification:\"\"\r\n\t\t\t}\r\n\t\tcase 'LOAD_NOTIFICATION_BY_ID_SUCCESS':\r\n\t\t\tconsole.log(\"dsdsds\")\r\n\t\t\treturn{\r\n\t\t\t\t...state,\r\n\t\t\t\tnotification:action.notification,\r\n\t\t\t\tmodule:action.model,\r\n\t\t\t\tloadingNotification:false,\r\n\t\t\t}\r\n\t\tcase 'LOAD_NOTIFICATION_BY_ID_FAILED':\r\n\t\t\tconsole.log(\"herppe\")\r\n\t\t\treturn{\r\n\t\t\t\t...state,\r\n\t\t\t\tloadingNotification:false,\r\n\t\t\t\terrorNotification:action.error\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\nexport default notificationInfos","const moduleSubmit=(state={submitting:false,errorSubmit:\"\",success:false},action)=>{\r\n\tswitch(action.type){\r\n\t\tcase 'CREATE_MODULE_REQUEST':\r\n\t\t\treturn{\r\n\t\t\t\tsubmitting:true,\r\n\t\t\t\terrorSubmit:\"\",\r\n\t\t\t\tsuccess:false\r\n\t\t\t}\r\n\t\tcase 'CREATE_MODULE_SUCCESS':\r\n\t\t\treturn{\r\n\t\t\t\t...state,\r\n\t\t\t\tsubmitting:false,\r\n\t\t\t\tsuccess:true\r\n\t\t\t}\r\n\t\tcase 'CREATE_MODULE_FAILED':\r\n\t\t\tconsole.log(action.error)\r\n\t\t\treturn{\r\n\t\t\t\tsubmitting:false,\r\n\t\t\t\terrorSubmit:action.error\r\n\t\t\t}\r\n\t\tcase 'CLEAR_SUBMIT':\r\n\t\t\treturn{\r\n\t\t\t\tsuccess:false,\r\n\t\t\t\tsubmitting:false,\r\n\t\t\t\terrorSubmit:\"\"\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\nexport default moduleSubmit","import { combineReducers } from 'redux'\r\nimport modules from './modules'\r\nimport notifications from './notifications'\r\nimport moduleInfos from './moduleInfos'\r\nimport notificationInfos from './notificationInfos'\r\nimport moduleSubmit from './moduleSubmit'\r\nexport default combineReducers({\r\n  modules,\r\n  notifications,\r\n  moduleInfos,\r\n  notificationInfos,\r\n  moduleSubmit\r\n})","//this is the list of the methods we use to communicate with the backend.\r\n\r\n\r\n/*\r\n\tModules methods\r\n*/\r\n\r\n//this method loads the modules from a backend server using a get request (supports pagination).\r\nconst getModules=async(currentPage)=>{\r\n\ttry{\r\n\t\tconst response=await fetch('https://bouatim-webreath-iot-backend.herokuapp.com/api/modules?page='+(currentPage-1))\r\n\t\tconst jsonResponse= await response.json()\r\n\t\tif(jsonResponse.errorMessage){\r\n\t\t\tthrow {message:jsonResponse.errorMessage}\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tmodules:jsonResponse.modules,\r\n\t\t\tcount:jsonResponse.count,\r\n\t\t}\r\n\t}\r\n\tcatch(error){\r\n\t\tthrow {message:error.message}\r\n\t}\r\n}\r\n//this method loads a module information from a backend server using a get request.\r\nconst getModuleInfos=async(id)=>{\r\n\ttry{\r\n\t\tconst response=await fetch('https://bouatim-webreath-iot-backend.herokuapp.com/api/modules/'+id)\r\n\t\tconst jsonResponse= await response.json()\r\n\t\tif(jsonResponse.errorMessage){\r\n\t\t\tthrow {message:jsonResponse.errorMessage}\r\n\t\t}\r\n\t\treturn{\r\n\t\t\tmodule:jsonResponse.module,\r\n\t\t\ttemperatureHistory:jsonResponse.temperatureHistory,\r\n\t\t\tactivityStateHistory:jsonResponse.activityStateHistory,\r\n\t\t\tdataExchangeHistory:jsonResponse.dataExchangeHistory\r\n\t\t}\r\n\t}\r\n\tcatch(error){\r\n\t\tthrow {message:error.message}\r\n\t}\r\n}\r\n//this method allows us to create a new module i using a post request.\r\nconst createNewModule=async(model)=>{\r\n\ttry{\r\n\t\tconst result=await fetch('https://bouatim-webreath-iot-backend.herokuapp.com/api/modules', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\tAccept: 'application/json',\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify(model),\r\n\t\t});\r\n\t\tconst jsonResponse= await result.json()\r\n\t\tif(jsonResponse.errorMessage){\r\n\r\n\t\t\tthrow {message:jsonResponse.errorMessage}\r\n\t\t}\r\n\t}\r\n\tcatch(error){\r\n\t\tthrow {message:error.message}\r\n\t}\r\n}\r\n\r\n/**\r\n\tNotifications related methods\r\n*/\r\n\r\nconst updateNotificationSeen=async(model)=>{\r\n\ttry{\r\n\t\tconst result=await fetch('https://bouatim-webreath-iot-backend.herokuapp.com/api/notifications', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\tAccept: 'application/json',\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify(model),\r\n\t\t});\r\n\t}\r\n\tcatch(error){\r\n\r\n\t}\r\n}\r\n\r\n//this method loads a module information from a backend server using a get request.\r\nconst getNotificationInfos=async(id)=>{\r\n\ttry{\r\n\t\tconst response=await fetch('https://bouatim-webreath-iot-backend.herokuapp.com/api/notifications/'+id)\r\n\t\tconst jsonResponse= await response.json()\r\n\t\tif(jsonResponse.errorMessage){\r\n\t\t\tthrow {message:jsonResponse.errorMessage}\r\n\t\t}\r\n\t\treturn{\r\n\t\t\tmodule:jsonResponse.module,\r\n\t\t\tnotification:jsonResponse.notification,\r\n\t\t}\r\n\t}\r\n\tcatch(error){\r\n\t\tthrow {message:error.message}\r\n\t}\r\n}\r\n\r\n//this method loads the notifications from a backend server using a get request (supports pagination).\r\nconst getNotifications=async(currentPage)=>{\r\n\ttry{\r\n\t\t\r\n\t\tconst response=await fetch('https://bouatim-webreath-iot-backend.herokuapp.com/api/notifications?page='+(currentPage-1))\r\n\t\tconst jsonResponse= await response.json()\r\n\t\tif(jsonResponse.errorMessage){\r\n\t\t\tthrow {message:jsonResponse.errorMessage}\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tnotifications:jsonResponse.notifications,\r\n\t\t\tcount:jsonResponse.count\r\n\t\t}\r\n\t}\r\n\tcatch(error){\r\n\t\tthrow {message:error.message}\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\nexport default {getModules,getNotifications,getModuleInfos,getNotificationInfos,createNewModule,updateNotificationSeen}","import {call,put} from 'redux-saga/effects'\r\nimport api from '../api/api'\r\nexport function *loadModules(action){\r\n\ttry{\r\n\r\n\t\tconst result=yield call(api.getModules,action.page)\r\n\t\tyield put({type:'LOAD_MODULES_SUCCESS',models:result.modules,count:result.count})\r\n\t}\r\n\tcatch(error){\r\n\t\tyield put({type:'LOAD_MODULES_FAILED',error:error.message})\r\n\t}\r\n}\r\n\r\nexport function *loadModuleById(action){\r\n\ttry{\r\n\t\tconst result=yield call(api.getModuleInfos,action.id)\r\n\t\tyield put({type:'LOAD_MODULE_BY_ID_SUCCESS',model:result.module,temperatureHistory:result.temperatureHistory,activityStateHistory:result.activityStateHistory,dataExchangeHistory:result.dataExchangeHistory})\r\n\t}\r\n\tcatch(error){\r\n\t\tyield put({type:'LOAD_MODULE_BY_ID_FAILED',error:error.message})\r\n\t}\r\n}\r\n\r\nexport function *createModule(action){\r\n\ttry{\r\n\r\n\t\tconst result=yield call(api.createNewModule,action.model)\r\n\t\tyield put({type:'CREATE_MODULE_SUCCESS'})\r\n\t}\r\n\tcatch(error){\r\n\t\tyield put({type:'CREATE_MODULE_FAILED',error:error.message})\r\n\t}\r\n}","import {call,put,fork} from 'redux-saga/effects'\r\nimport api from '../api/api'\r\n\r\nexport function *loadNotifications(action){\r\n\ttry{\r\n\t\tconst result=yield call(api.getNotifications,action.page)\r\n\t\tyield put({type:'LOAD_NOTIFICATIONS_SUCCESS',notifications:result.notifications,count:result.count})\r\n\t}\r\n\tcatch(error){\r\n\t\tyield put({type:'LOAD_NOTIFICATIONS_FAILED',error:error.message})\r\n\t}\r\n}\r\n\r\nexport function *loadNotificationById(action){\r\n\ttry{\r\n\t\tconst result=yield call(api.getNotificationInfos,action.id)\r\n\t\tyield put({type:'LOAD_NOTIFICATION_BY_ID_SUCCESS',notification:result.notification,model:result.module})\r\n\t\tyield call(api.updateNotificationSeen,{id:action.id})\r\n\t}\r\n\tcatch(error){\r\n\t\tyield put({type:'LOAD_NOTIFICATION_BY_ID_FAILED',error:error.message})\r\n\t}\r\n}\r\n","import { all,takeLatest} from 'redux-saga/effects'\r\nimport {loadModules,loadModuleById,createModule} from './modules'\r\nimport {loadNotifications,loadNotificationById} from './notifications'\r\nexport default function *root(){\r\n\r\n\tyield all([\r\n\t\ttakeLatest('LOAD_MODULES_REQUEST',loadModules),\r\n\t\ttakeLatest('LOAD_MODULE_BY_ID_REQUEST',loadModuleById),\r\n\t\ttakeLatest('CREATE_MODULE_REQUEST',createModule),\r\n\t\ttakeLatest('LOAD_NOTIFICATIONS_REQUEST',loadNotifications),\r\n\t\ttakeLatest('LOAD_NOTIFICATION_BY_ID_REQUEST',loadNotificationById)\r\n\t])\r\n}","import React from 'react'\r\nimport './Logo.css'\r\nimport logoImage from '../../../assets/images/webreathe.png'\r\nconst logo=(props)=>(\r\n    <div className=\"Logo\">\r\n        <a href=\"http://webreathe.fr/\" target=\"blank\" ><img src={logoImage} /></a>\r\n    </div>\r\n)\r\nexport default logo","import React from 'react'\r\nimport './NavigationItem.css'\r\n//importing an item from the routing library,once clicked trigers the navigation\r\nimport {NavLink} from 'react-router-dom'\r\n//this is a presentation component,wich mean he is only responsible of rendering the ui,he wont handle any logic,the logic is usaly habdled by a container\r\n//this component recives some properties to render from a container (the parent)\r\n//this component shows a link.\r\n\r\nconst navigationItem=(props)=>(\r\n    <li className='NavigationItem'><NavLink to={props.link} activeStyle={{color:\"white\",fontWeight:\"bold\"}}exact={true}  onClick={props.hide}>{props.title}</NavLink></li>\r\n)\r\nexport default navigationItem","import React from 'react'\r\n//importing the components wich constructs our backend\r\nimport NavigationItem from './NavigationItem/NavigationItem'\r\nimport './NavigationItems.css'\r\n//this is a presentation component,wich mean he is only responsible of rendering the ui,he wont handle any logic,the logic is usaly habdled by a container\r\n//this component recives some properties to render from a container (the parent)\r\n//this component shows the list od the links in the header.\r\nconst navigationItems=(props)=>(\r\n    <ul className='NavigationItems'>\r\n    \t<NavigationItem hide={props.clicked} title=\"New module\" link=\"/webreathe/newmodule\"/>\r\n    \t<NavigationItem hide={props.clicked} title=\"My Modules\" link=\"/webreathe/\"/>\r\n        <NavigationItem hide={props.clicked} title=\"Notifications\" link=\"/webreathe/notifications\"/>\r\n    </ul>\r\n)\r\nexport default navigationItems","import React from 'react'\r\nimport './DropDownButton.css'\r\n//this is a presentation component,wich mean he is only responsible of rendering the ui,he wont handle any logic,the logic is usaly habdled by a container\r\n//this component recives some properties to render from a container (the parent)\r\n//this component is visble on small devices ,it's a button once clicked it shows the dropdown.\r\nconst dropDownButton=(props)=>(\r\n    <div className='DropDownButton' onClick={props.clicked}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>   \r\n)\r\nexport default dropDownButton","import React from 'react'\r\nimport './BackDrop.css'\r\n//this is a presentation component,wich mean he is only responsible of rendering the ui,he wont handle any logic,the logic is usaly habdled by a container\r\n//this component recives some properties to render from a container (the parent)\r\n//this component shows the a background color ,when the dropdown is visible.\r\nconst backDrop=(props)=>(\r\n    <div className=\"BackDrop\" onClick={props.closed}>\r\n\r\n    </div>\r\n)\r\nexport default backDrop","const Aux=(props)=>props.children\r\nexport default Aux","import React from 'react'\r\nimport './DropDown.css'\r\n//importing the components building this component\r\nimport BackDrop from '../../../ui/BackDrop/BackDrop'\r\nimport Aux from '../../../../hoc/Auxilary'\r\nimport NavigationItems from '../NavigationItems/NavigationItems'\r\n//this is a presentation component,wich mean he is only responsible of rendering the ui,he wont handle any logic,the logic is usaly habdled by a container\r\n//this component recives some properties to render from a container (the parent)\r\n//this component is visble on small devices ,it's a dropdown.\r\nconst dropDown=(props)=>{\r\n    let attachedClasses=[\"DropDown\",\"Close\"]\r\n    if(props.show) attachedClasses=[\"DropDown\",\"Open\"]\r\n    return(\r\n        <Aux>\r\n        {props.show?<BackDrop closed={props.clicked} />:null}\r\n        <div className={attachedClasses.join(\" \")}>\r\n        \t\t<NavigationItems clicked={props.clicked} />          \r\n        </div>\r\n        </Aux>\r\n    )\r\n}\r\nexport default dropDown","import React, { Component } from 'react'\r\n//importing the components that builds this component\r\nimport Logo from '../../ui/Logo/Logo'\r\nimport NavigationItems from './NavigationItems/NavigationItems'\r\nimport DropDownButton from './DropDownButton/DropDownButton'\r\nimport DropDown from './DropDown/DropDown'\r\nimport './Header.css'\r\n//this is a presentation component,wich mean he is only responsible of rendering the ui,he wont handle any logic,the logic is usaly habdled by a container\r\n//this component recives some properties to render from a container (the parent)\r\n//this component renders the header of the website.\r\n\r\n/*\r\n    please note  this should be placed with the \r\n    containers,i only missed to place him in the\r\n    containers folder\r\n*/\r\nclass Header extends Component{\r\n    state={\r\n        dropDownIsVisible:false\r\n    }\r\n    showDropDownHandler=()=>{\r\n        this.setState((prevState)=>{\r\n            return{dropDownIsVisible:!prevState.dropDownIsVisible}\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <header className='Header'>\r\n                <DropDown clicked={this.showDropDownHandler} show={this.state.dropDownIsVisible} />\r\n                <DropDownButton clicked={this.showDropDownHandler}/>\r\n                <Logo />\r\n                <nav>\r\n                    <NavigationItems add={this.props.clicked}/>\r\n                </nav>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n    \r\nexport default Header","import React from 'react'\r\nimport Aux from '../../../hoc/Auxilary'\r\nimport './FormHeader.css'\r\n//importing icons from react icons\r\nimport { IoIosArrowBack } from \"react-icons/io\";\r\n//this is a presentation component,wich mean he is only responsible of rendering the ui,he wont handle any logic,the logic is usaly habdled by a container\r\n//this component recives some properties to render from a container (the parent)\r\n//this component shows the header of  form1 and form2.\r\nconst formHeader=(props)=>(\r\n\t<Aux>\r\n\t\t<div className=\"FormHeader\">\r\n            <h4 onClick={props.navigate} style={{color:!props.phase?\"rgb(167, 170, 171)\":\"\"}}><IoIosArrowBack /></h4>\r\n            <h5>Module informations</h5>\r\n            <h6> {props.phase?\"2\":\"1\"} of 2</h6>\r\n           \r\n        </div>\r\n        <div className=\"BarStatus\" >\r\n             <div style={{backgroundColor:props.form1IsValid?\"rgb(105, 203, 224)\":\"rgb(167, 170, 171)\"}}></div>\r\n            <div style={{backgroundColor:props.form2IsValid?\"rgb(105, 203, 224)\":\"rgb(167, 170, 171)\"}}></div>\r\n           \r\n        </div>\r\n     </Aux>\r\n\t)\r\nexport default formHeader","import React from 'react'\r\nimport { FiType } from \"react-icons/fi\";\r\nimport { TiSortNumerically } from \"react-icons/ti\";\r\nimport { MdDescription } from \"react-icons/md\";\r\nimport { GoKeyboard } from \"react-icons/go\";\r\nimport Aux from '../../../hoc/Auxilary'\r\nimport FormHeader from '../FormHeader/FormHeader'\r\nimport './Form1.css'\r\nconst form1=(props)=>(\r\n    <Aux>\r\n        <div className=\"Form1Body\">\r\n            <FormHeader form1IsValid={props.form1IsValid} form2IsValid={props.form2IsValid}/>\r\n            <p>Please fill some basic informations abaout the module.</p>\r\n            <div className=\"Form1Field\">\r\n                <span>\r\n                <GoKeyboard />\r\n                </span>\r\n                <input type=\"text\" placeholder=\"Module Name\" value={props.name} onChange={(text)=>props.form1Handler(0,text.target.value)} required />\r\n            </div>\r\n            <div className=\"Form1Field\">\r\n            <span>\r\n                <FiType />\r\n                </span>\r\n                <input type=\"text\" placeholder=\"Module Type\" value={props.type} onChange={(text)=>props.form1Handler(1,text.target.value)} required/>\r\n            </div>\r\n            <div className=\"Form1Field\">\r\n            <span>\r\n                <TiSortNumerically />\r\n                </span>\r\n                <input type=\"number\" onChange={(text)=>props.form1Handler(2,text.target.value)} value={props.number} placeholder=\"Module Number\" required/>\r\n            </div>\r\n            <div className=\"Form2Field\">\r\n            <span><MdDescription/></span>\r\n            <textarea type=\"text\" onChange={(text)=>props.form1Handler(3,text.target.value)} value={props.description}  placeholder=\"Module Description\" required/>\r\n            </div>\r\n            <button disabled={!props.form1IsValid}  className=\"Form1Continue\" type=\"submit\" onClick={props.navigate} >\r\n                    Continue\r\n            </button>\r\n            \r\n        </div>\r\n\r\n    </Aux>\r\n)\r\nexport default form1","import React from 'react'\r\nimport './LoadSprint2.css'\r\n//this is a presentation component,wich mean he is only responsible of rendering the ui,he wont handle any logic,the logic is usaly habdled by a container\r\n//this component recives some properties to render from a container (the parent)\r\n//this component shows a loading animation.\r\nconst loadSprint2=(props)=>(\r\n\t<div class=\"spinner\">\r\n\t\t<div class=\"cube1\"></div>\r\n\t\t<div class=\"cube2\"></div>\r\n\t</div>\r\n\t)\r\nexport default loadSprint2","import React from 'react'\r\nimport './Form2.css'\r\nimport Aux from '../../../hoc/Auxilary'\r\n//importing the component that builds this component\r\nimport FormHeader from '../FormHeader/FormHeader'\r\nimport LoadSprint2 from '../../ui/LoadSprint2/LoadSprint2'\r\n//importing icons from react icons\r\nimport { FaTemperatureHigh,FaExchangeAlt } from 'react-icons/fa'\r\nimport { GoGraph } from 'react-icons/go'\r\nimport { GiSandsOfTime } from 'react-icons/gi'\r\n//this is a presentation component,wich mean he is only responsible of rendering the ui,he wont handle any logic,the logic is usaly habdled by a container\r\n//this component recives some properties to render from a container (the parent)\r\n//this component shows the second form of the New Module Container.\r\nconst form2 =(props)=>(\r\n\t\t\t<Aux>\r\n       \t\t\t<div className=\"Form2Body\">\r\n       \t\t\t{   !(props.submitting)? <Aux>\r\n\t       \t\t\t<FormHeader navigate={props.navigate} phase={props.phase} form2IsValid={props.form2IsValid} form1IsValid={props.form1IsValid}/>\r\n\t       \t\t\t<p>Please select at least one item to monitor.</p>\r\n\t       \t\t\t<div className=\"ItemsContainer\">\r\n\t\t       \t\t\t<a style={{backgroundColor:props.temperature?\"rgb(105, 203, 224)\":\"\"}} onClick={()=>props.selectItemsHandler(0)} >\r\n\t\t       \t\t\t\t<span style={{color:props.temperature?\"white\":\"\"}}><FaTemperatureHigh/></span>\r\n\t\t       \t\t\t\t<span className=\"itemLabel\" style={{color:props.temperature?\"white\":\"\"}}>Temperature</span>\r\n\t\t       \t\t\t</a>\r\n\t\t       \t\t\t<a style={{backgroundColor:props.activityDuration?\"rgb(105, 203, 224)\":\"\"}} onClick={()=>props.selectItemsHandler(3)}>\r\n\t\t       \t\t\t\t<span style={{color:props.activityDuration?\"white\":\"\"}}><GiSandsOfTime/></span>\r\n\t\t       \t\t\t\t<span  style={{color:props.activityDuration?\"white\":\"\"}} className=\"itemLabel\">Activity Duration</span>\r\n\t\t       \t\t\t</a>\r\n\t\t       \t\t\t<a style={{backgroundColor:props.activityState?\"rgb(105, 203, 224)\":\"\"}} onClick={()=>props.selectItemsHandler(2)}>\r\n\t\t       \t\t\t\t<span style={{color:props.activityState?\"white\":\"\"}}><GoGraph/></span>\r\n\t\t       \t\t\t\t<span style={{color:props.activityState?\"white\":\"\"}} className=\"itemLabel\">Activity State</span>\r\n\t\t       \t\t\t</a>\r\n\t\t       \t\t\t<a style={{backgroundColor:props.dataExchange?\"rgb(105, 203, 224)\":\"\"}} onClick={()=>props.selectItemsHandler(1)}>\r\n\t\t       \t\t\t\t<span style={{color:props.dataExchange?\"white\":\"\"}}><FaExchangeAlt/></span>\r\n\t\t       \t\t\t\t<span style={{color:props.dataExchange?\"white\":\"\"}} className=\"itemLabel\">Data Exchange</span>\r\n\t\t       \t\t\t</a>\r\n\t       \t\t\t</div>\r\n\t       \t\t\t<button disabled={!props.form1IsValid || !props.form2IsValid || props.submitting} className=\"SubmitButton\" onClick={(e)=>props.submit(e)}>\r\n\t       \t\t\t\tsubmit\r\n\t       \t\t\t</button>\r\n\t       \t\t\t</Aux>\r\n\t       \t\t\t:\r\n\t       \t\t\t<div style={{width:\"100%\",height:\"100%\"}}>\r\n\t       \t\t\t\t\t <LoadSprint2 /> \r\n\t       \t\t\t</div>\r\n\t       \t\t}\r\n\t       \t\t\t\r\n       \t\t\t</div>\r\n    \t\t</Aux>\r\n\t\t\t)\r\n    \r\n\r\nexport default form2","import React from 'react'\r\nimport Aux from '../../../hoc/Auxilary'\r\nimport './NewModuleStatus.css'\r\n//importing icons from react icons\r\nimport { GiPoliceBadge } from \"react-icons/gi\"\r\nimport { FaCheck } from \"react-icons/fa\"\r\nimport { IoMdCloseCircleOutline } from \"react-icons/io\"\r\n//this is a presentation component,wich mean he is only responsible of rendering the ui,he wont handle any logic,the logic is usaly habdled by a container\r\n//this component recives some properties to render from a container (the parent)\r\n//this component shows the status of both forms: 1 and 2.\r\nconst newModuleStatus=(props)=>(\r\n    <Aux>\r\n        <div className=\"imageHolder\">\r\n            <span><GiPoliceBadge/> Form Status</span>\r\n        </div>\r\n        <div className=\"messageStatus\">\r\n            <span style={{color:props.name.trim().length?\"green\":\"red\",marginRight:\"1%\",marginTop:\"1%\"}}>{props.name.trim().length?<FaCheck/>:<IoMdCloseCircleOutline/>}</span>\r\n            <span>{props.name.trim().length?\"Module name is valid\":\"Please fill the Module Name\"}</span>\r\n        </div>\r\n        <div className=\"messageStatus\">\r\n            <span style={{color:props.type.trim().length?\"green\":\"red\",marginRight:\"1%\",marginTop:\"1%\"}}>{props.type.trim().length?<FaCheck/>:<IoMdCloseCircleOutline/>}</span>\r\n            <span>{props.type.trim().length?\"Module Type is valid\":\"Please fill the Module Type\"}</span>\r\n        </div>\r\n        <div className=\"messageStatus\">\r\n            <span style={{color:props.number?\"green\":\"red\",marginRight:\"1%\",marginTop:\"1%\"}}>{props.number?<FaCheck/>:<IoMdCloseCircleOutline/>}</span>\r\n            <span>{props.number?\"Module Number is valid\":\"Please fill the Module Number\"}</span>\r\n        </div>\r\n        <div className=\"messageStatus\">\r\n            <span style={{color:props.description.trim().length?\"green\":\"red\",marginRight:\"1%\",marginTop:\"1%\"}}>{props.description.trim().length?<FaCheck/>:<IoMdCloseCircleOutline/>}</span>\r\n            <span>{props.description.trim().length?\"Module Description is valid\":\"Please fill the Module Description\"}</span>\r\n        </div>\r\n        <div className=\"messageStatus\">\r\n            <span style={{color:props.form2IsValid?\"green\":\"red\",marginRight:\"1%\",marginTop:\"1%\"}}>{props.form2IsValid?<FaCheck/>:<IoMdCloseCircleOutline/>}</span>\r\n            <span>{props.form2IsValid?\"At least one item to monitor is selected\":\"Please select one criteria to monitor\"}</span>\r\n        </div>\r\n       \r\n       \r\n        \r\n        \r\n      \r\n    </Aux>\r\n)\r\nexport default newModuleStatus","import React,{ Component } from 'react'\r\nimport './NewModule.css'\r\n//importing the forms that are used to create a new Module\r\nimport Form1 from '../../components/NewModule/Form1/Form1'\r\nimport Form2 from '../../components/NewModule/Form2/Form2'\r\n//importing the a commonent that allow to track the status of the form\r\nimport NewModuleStatus from '../../components/NewModule/NewModuleStatus/NewModuleState'\r\nimport api from '../../api/api'\r\n//import an icon from react icons\r\nimport { MdImportantDevices } from 'react-icons/md'\r\n//Redux import ,to access the store (the store is just like a global state accessible by all containers)\r\nimport { connect } from 'react-redux'\r\nimport { createModuleRequest,clearSubmit } from '../../actions'\r\nclass NewModule extends Component{\r\n    //this is the state of the container,i used it to control ,and to fill the form.\r\n\tstate={\r\n\t\tphase2:false,\r\n        temperature:false,\r\n        dataExchange:false,\r\n        activityState:false,\r\n        activityDuration:false,\r\n        form2IsValid:false,\r\n        name:\"\",\r\n        type:\"\",\r\n        number:null,\r\n        description:\"\",\r\n        form1IsValid:false,\r\n\t}\r\n\r\n    //this methode change the form we are filling,we have two forms and we need to fill them both to submit form.\r\n\tchangephaseHandler=()=>{\r\n\t\tthis.setState((prevState)=>{\r\n\t\t\treturn{\r\n\t\t\t\tphase2:!prevState.phase2,\r\n\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n    //a method that validates if the value of a form is an integer\r\n    isInt=(value)=>{\r\n        let x;\r\n        return isNaN(value) ? !1 : (x = parseFloat(value), (0 | x) === x);        \r\n    }\r\n\r\n    //this methods ensures that the data filled in the first form are valid    \r\n    form1Handler=(step,item)=>{\r\n        switch(step){\r\n            case 0:\r\n                this.setState({\r\n                    name:item,\r\n                    form1IsValid:item.trim().length && this.state.type.trim().length && this.state.description.trim().length && this.isInt(this.state.number) \r\n                })\r\n                break;\r\n            case 1:\r\n                this.setState({\r\n                    type:item,\r\n                    form1IsValid:item.trim().length && this.state.name.trim().length && this.state.description.trim().length && this.isInt(this.state.number)\r\n                })\r\n                break;\r\n            case 2:\r\n                this.setState({\r\n                    number:item,\r\n                    form1IsValid:this.isInt(item) && this.state.type.trim().length && this.state.description.trim().length && this.state.name.trim().length\r\n                })\r\n                break;\r\n            case 3:\r\n                this.setState({\r\n                    description:item,\r\n                    form1IsValid:item.trim().length && this.state.type.trim().length && this.state.name.trim().length && this.isInt(this.state.number)\r\n                })\r\n                break;\r\n        }\r\n    }\r\n  \r\n    //this method allows  us to select the items to monitor in the second form\r\n    selectItemsHandler=(item)=>{\r\n        switch(item){\r\n            case 0:\r\n                this.setState((prevState)=>{\r\n                    return {\r\n                        temperature:!prevState.temperature,\r\n                        form2IsValid:!prevState.temperature || prevState.dataExchange || prevState.activityState || prevState.activityDuration\r\n                    }\r\n                })\r\n                break;\r\n            case 1:\r\n                this.setState((prevState)=>{\r\n                    return{\r\n                        dataExchange:!prevState.dataExchange,\r\n                        form2IsValid:prevState.temperature || !prevState.dataExchange || prevState.activityState || prevState.activityDuration\r\n                    }\r\n                })\r\n                break;\r\n            case 2:\r\n                this.setState((prevState)=>{\r\n                    return{\r\n                        activityState:!prevState.activityState,\r\n                        form2IsValid:prevState.temperature || prevState.dataExchange || !prevState.activityState || prevState.activityDuration\r\n                    }\r\n                })\r\n                break;\r\n            case 3:\r\n                this.setState((prevState)=>{\r\n                    return{\r\n                        activityDuration:!prevState.activityDuration,\r\n                        form2IsValid:prevState.temperature || prevState.dataExchange || prevState.activityState || !prevState.activityDuration\r\n                    }\r\n                })\r\n                break;\r\n        }\r\n    }\r\n\r\n    //this method submits the data filled in both forms.\r\n     submitHandler=async(e)=>{\r\n       e.preventDefault()\r\n       this.props.createModule({\r\n            title:this.state.name,\r\n            type:this.state.type,\r\n            number:this.state.number,\r\n            description:this.state.description,\r\n            shouldMonitorData:this.state.dataExchange,\r\n            shouldMonitorTemperature:this.state.temperature,\r\n            shouldMonitorActivityState:this.state.activityState,\r\n            shouldMonitorActivityDuration:this.state.activityDuration\r\n       })\r\n        \r\n    }\r\n    //this method renders the page\r\n\trender(){\r\n        //if the module was successufuly created we navigate ,to the list modules route,and we clear the forms\r\n        if(this.props.success){\r\n            this.props.clearSubmit()\r\n            this.props.history.push('/webreathe')\r\n\r\n        }\r\n\t\treturn (    \r\n                    <div className=\"NewModuleContainer\">\r\n        \t\t\t\t<div className=\"NewModule\"> \r\n            \t\t\t\t<div className=\"ModuleHeader\" >\r\n                \t\t\t\t<h1><MdImportantDevices/></h1>\r\n                \t\t\t\t<h2>New Module</h2>\r\n            \t\t\t\t</div>\r\n            \t\t\t\t<div  className=\"ModuleBody\">\r\n                \t\t\t\t<form className=\"LeftSide\">\r\n                    \t\t\t\t{this.state.phase2?\r\n                                        <Form2 navigate={this.changephaseHandler} submit={this.submitHandler}  submitting={this.props.submitting} form1IsValid={this.state.form1IsValid} form2IsValid={this.state.form2IsValid} selectItemsHandler={(item)=>this.selectItemsHandler(item)}  activityDuration={this.state.activityDuration} form2IsValid={this.state.form2IsValid} activityState={this.state.activityState} temperature={this.state.temperature}  dataExchange={this.state.dataExchange} phase={this.state.phase2}/>:\r\n                                        <Form1 navigate={this.changephaseHandler} form1IsValid={this.state.form1IsValid} form2IsValid={this.state.form2IsValid} name={this.state.name} type={this.state.type} number={this.state.number} description={this.state.description} form1Handler={(item,text)=>this.form1Handler(item,text)} phase={this.state.phase2}/>}\r\n                \t\t\t\t</form>\r\n                \t\t\t\t<div className=\"RightSide\">\r\n                    \t\t\t\t<NewModuleStatus form2IsValid={this.state.form2IsValid} name={this.state.name} type={this.state.type} number={this.isInt(this.state.number)} description={this.state.description}/>\r\n                \t\t\t\t</div>\r\n           \t\t\t\t\t</div>\r\n        \t\t\t\t</div>\r\n   \t\t\t\t \t</div>\r\n\t\t\t)\r\n\t}\r\n    \r\n}\r\n//the properties we load from the store\r\nconst mapStateToProps = state => ({\r\n    submitting: state.moduleSubmit.submitting,\r\n    error:state.moduleSubmit.errorSubmit,\r\n    success:state.moduleSubmit.success\r\n})\r\n//the methods we can use to update the data in the  store\r\nconst mapDispatchToProps = dispatch => ({\r\n    createModule: (module) => dispatch(createModuleRequest(module)),\r\n    clearSubmit:() => dispatch(clearSubmit())\r\n})\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(NewModule)","export const createModuleRequest = model => ({\r\n\ttype:'CREATE_MODULE_REQUEST',\r\n\tmodel\r\n})\r\nexport const createModuleSuccess= () =>({\r\n\ttype:'CREATE_MODULE_SUCCESS'\r\n})\r\n\r\nexport const creteModuleFailed= error => ({\r\n\ttype:'CREATE_MODULE_FAILED',\r\n\terror\r\n})\r\nexport const clearSubmit= ()=>({\r\n\ttype:'CLEAR_SUBMIT'\r\n})\r\n\r\nexport const loadModulesRequest= page => ({\r\n\ttype:'LOAD_MODULES_REQUEST',\r\n\tpage\r\n}) \r\nexport const loadModulesSuccess= (models,count) => ({\r\n\ttype:'LOAD_MODULES_SUCCESS',\r\n\tmodels,\r\n\tcount\r\n})\r\nexport const loadModulesFailed= error =>({\r\n\ttype:'LOAD_MODULES_FAILED',\r\n\terror\r\n})\r\n\r\nexport const loadModuleByIdRequest = id => ({\r\n\ttype:'LOAD_MODULE_BY_ID_REQUEST',\r\n\tid\r\n})\r\nexport const loadModuleByIdSuccess = (model,temperatureHistory,activityStateHistory,dataExchangeHistory) =>({\r\n\ttype:'LOAD_MODULE_BY_ID_SUCCESS',\r\n\tmodel,\r\n\ttemperatureHistory,\r\n\tactivityStateHistory,\r\n\tdataExchangeHistory\r\n})\r\nexport const loadModuleByIdFailed= error =>({\r\n\ttype:'LOAD_MODULE_BY_ID_FAILED',\r\n\terror\r\n})\r\n\r\n//Notification Actions\r\n\r\nexport const loadNotificationsRequest= page => ({\r\n\ttype:'LOAD_NOTIFICATIONS_REQUEST',\r\n\tpage\r\n}) \r\nexport const loadNotificationsSuccess= (notifications,count) => {\r\n\tconsole.log(\"dhjhsdhsdjshdjsldld jdsjsdj\")\r\n\treturn ({\r\n\ttype:'LOAD_NOTIFICATIONS_SUCCESS',\r\n\tnotifications,\r\n\tcount\r\n})}\r\nexport const loadNotificationsFailed= error =>({\r\n\ttype:'LOAD_NOTIFICATIONS_FAILED',\r\n\terror\r\n})\r\n\r\nexport const loadNotificationByIdRequest = id => ({\r\n\ttype:'LOAD_NOTIFICATION_BY_ID_REQUEST',\r\n\tid\r\n})\r\nexport const loadNotificationByIdSuccess = (notification,model) =>({\r\n\ttype:'LOAD_NOTIFICATION_BY_ID_SUCCESS',\r\n\tnotification,\r\n\tmodel\r\n})\r\nexport const loadNotificationByIdFailed= error =>({\r\n\ttype:'LOAD_NOTIFICATION_BY_ID_FAILED',\r\n\terror\r\n})","import React from 'react'\r\nimport './MyModule.css'\r\nimport {Link} from \"react-router-dom\";\r\n//this is a presentation component,wich mean he is only responsible of rendering the ui,he wont handle any logic,the logic is usaly habdled by a container\r\n//this component recives some properties to render from a container (the parent)\r\n//this component renders the informations of a given module item\r\nconst myModule=(props)=>(\r\n\t<Link className=\"MyModule\" to={\"/webreathe/\"+props.id} >\r\n\t\t<div className=\"MyModuleHeading\">\r\n\t\t\t<h2>{props.title}</h2>\r\n\t\t</div>\r\n\t\t<div className=\"MyModuleBody\"> \r\n\t\t\t<p>{props.description}</p>\r\n\t\t</div>\r\n\t\t<span>created at : {props.createdAt}</span>\r\n\t</Link>\t\r\n) \r\nexport default myModule","import React from 'react'\r\nimport './PaginationItem.css'\r\n//this is a presentation component,wich mean he is only responsible of rendering the ui,he wont handle any logic,the logic is usaly habdled by a container\r\n//this component recives some properties to render from a container (the parent)\r\n//this component renders an item of the pagination items.\r\nconst paginationItem=(props)=>(\r\n\t<button className=\"PaginationItem\" style={{backgroundColor:props.page===props.index && \"white\",color:props.page===props.index && \"black\"}} onClick={()=>props.clicked(props.index)}>\r\n\t\t{props.index}\r\n\t</button>\r\n)\r\nexport default paginationItem","import React from 'react'\r\nimport PaginationItem from './PaginationItem/PaginationItem'\r\nimport './PaginationItems.css'\r\n//this is a presentation component,wich mean he is only responsible of rendering the ui,he wont handle any logic,the logic is usaly habdled by a container\r\n//this component recives some properties to render from a container (the parent)\r\n//this component renders an item of the list of pages.\r\nconst paginationItems=(props)=>(\r\n\t<div className=\"PaginationItems\">\r\n\t\t{[...Array(props.count)].map((e,i)=><PaginationItem page={props.currentPage} clicked={props.clicked}  index={i+1} />)}\r\n\t</div>\r\n)\r\nexport default paginationItems","import React from 'react'\r\nimport './LoadingSprint.css'\r\n//this is a presentation component,wich mean he is only responsible of rendering the ui,he wont handle any logic,the logic is usaly habdled by a container\r\n//this component recives some properties to render from a container (the parent)\r\n//this component shows a loading animation.\r\nconst loadingSprint=(props)=>(\r\n\t<div class=\"sk-cube-grid\">\r\n\t\t<div class=\"sk-cube sk-cube1\"></div>\r\n\t\t<div class=\"sk-cube sk-cube2\"></div>\r\n\t\t<div class=\"sk-cube sk-cube3\"></div>\r\n\t\t<div class=\"sk-cube sk-cube4\"></div>\r\n\t\t<div class=\"sk-cube sk-cube5\"></div>\r\n\t\t<div class=\"sk-cube sk-cube6\"></div>\r\n\t\t<div class=\"sk-cube sk-cube7\"></div>\r\n\t\t<div class=\"sk-cube sk-cube8\"></div>\r\n\t\t<div class=\"sk-cube sk-cube9\"></div>\r\n\t</div>\r\n\t)\r\nexport default loadingSprint","import React from 'react'\r\nimport './ErrorMessage.css'\r\n//loading an image from our assets\r\nimport errorImage from '../../../assets/images/Error.svg'\r\n//this is a presentation component,wich mean he is only responsible of rendering the ui,he wont handle any logic,the logic is usaly habdled by a container\r\n//this component recives some properties to render from a container (the parent)\r\n//this component shows the error message .\r\nconst errorMessage=(props)=>(\r\n\t\t<div className=\"ErrorMessage\">\r\n\t\t\t<img src={errorImage}/>\r\n\t\t\t<h3>Something went wrong</h3>\r\n\t\t\t<p>{props.errorMessage}</p>\r\n\t\t</div>\r\n)\r\nexport default errorMessage","import React,{Component} from 'react'\r\nimport './MyModules.css'\r\n//importing the components building the container MyModuleDetails\r\nimport MyModule from '../../components/MyModules/MyModule/MyModule'\r\nimport iotImage from '../../assets/images/iot.png'\r\nimport PaginationItems from '../../components/MyModules/PaginationItems/PaginationItems'\r\nimport api from '../../api/api'\r\n//importing the loading animation ,and a Error component wich renders the error message\r\nimport LoadingSprint from '../../components/ui/LoadingSprint/LoadingSprint'\r\nimport ErrorMessage  from '../../components/ui/ErrorMessage/ErrorMessage'\r\n//Redux import ,to access the store (the store is just like a global state accessible by all containers)\r\nimport { connect } from 'react-redux'\r\nimport { loadModulesRequest } from '../../actions'\r\nclass MyModules extends Component{\r\n\t//once the page is visble this method will be called,it loads the list of modules \r\n\tasync componentDidMount(){\r\n\t\tthis.props.loadModules(this.props.currentPage)\r\n\t}\r\n\t//this container has support pagination\r\n\tchangePageHandler=async(page)=>{\r\n\t\tthis.props.loadModules(page)\r\n\t}\r\n\t//rendering the page.\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div className=\"MyModulesContainer\">\r\n\r\n\t\t\t<div className=\"MyModules\">\r\n\t\t\t\t{\tthis.props.loading ? <LoadingSprint /> : this.props.error ? <ErrorMessage errorMessage={this.props.error}/>:\r\n\t\t\t\tthis.props.modules.map(module=><MyModule key={module.id} id={module.id} description={module.description} title={module.title} createdAt={module.created_at}/>)\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t\t{this.props.count!==1 ? <PaginationItems currentPage={this.props.currentPage} clicked={this.changePageHandler} count={this.props.count}/> : null }\r\n\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n//the properties we load from the store\r\nconst mapStateToProps = state => ({\r\n\tmodules: state.modules.modules,\r\n\tloading:state.modules.loadingModules,\r\n\tcount:state.modules.countModules,\r\n\tcurrentPage:state.modules.pageModules,\r\n\terror:state.modules.errorModules\r\n})\r\n//the methods we can use to update the data in the  store\r\nconst mapDispatchToProps = dispatch => ({\r\n\tloadModules: page => dispatch(loadModulesRequest(page))\r\n})\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(MyModules)","import React from 'react'\r\nimport './ModuleInfos.css'\r\n//importing an image from our assets\r\nimport moduleInfosImage from '../../../assets/images/moduleInfos.svg'\r\n//importing icons from react icons\r\nimport { FiType } from 'react-icons/fi'\r\nimport { TiSortNumerically } from 'react-icons/ti'\r\nimport { MdDescription } from 'react-icons/md'\r\nimport { GoKeyboard } from 'react-icons/go'\r\nimport { IoMdTime } from 'react-icons/io'\r\nimport { FaPowerOff } from 'react-icons/fa'\r\n\r\n//this is a presentation component,wich mean he is only responsible of rendering the ui,he wont handle any logic,the logic is usaly habdled by a container\r\n//this component recives some properties to render from a container (the parent)\r\n//this component renders the informations of a given module\r\nconst moduleInfos=(props)=>(\r\n\t<div className=\"ModuleInfos\">\r\n\t\t<div className=\"ModuleInfosHeader\">\r\n\t\t\t<img src={moduleInfosImage}/>\r\n\t\t\t<h3>Module Infos</h3>\r\n\t\t</div>\r\n\t\t<div className=\"ModuleInfosBody\">\r\n\t\t\t<h3><TiSortNumerically/> Number: {props.number}</h3>\r\n\t\t\t<h3><GoKeyboard/> Title : {props.title}</h3>\r\n\t\t\t<h3><FiType/> Type : {props.type}</h3>\r\n\t\t\t<h3><FaPowerOff/> State : {props.state===0?\"OFF\":\"ON\"} </h3>\r\n\t\t\t<h3><MdDescription/> Description : {props.description}</h3>\r\n\t\t\t<h3><IoMdTime/> Creatd At : {props.createdAt}</h3>\r\n\t\t\t\r\n\t\t</div>\r\n\t</div>\r\n)\r\nexport default moduleInfos","import React from 'react'\r\nimport './ActivityDurationMonitor.css'\r\n//importing a library that allows to draw charts\r\nimport { Doughnut } from 'react-chartjs-2';\r\n//this is a presentation component,wich mean he is only responsible of rendering the ui,he wont handle any logic,the logic is usaly habdled by a container\r\n//this component recives some properties to render from a container (the parent)\r\n//this component renders the duration data of a given module\r\nconst activityDurationMonitor=(props)=>{\r\n\tlet activeHours=24;\r\n\tif(props.durationList.length){\r\n\t\tprops.durationList.map(ele=>{\r\n\t\t\tif(!ele.isActive) activeHours=activeHours-1\r\n\t\t})\r\n\t}\r\n\tconst data = {\r\n    datasets: [{\r\n        data: [24-activeHours,activeHours],\r\n        backgroundColor:[\"#e82525\",\"#3ddbac\"]\r\n    }],\r\n\r\n    // These labels appear in the legend and in the tooltips when hovering different arcs\r\n    labels: [\r\n        'Off',\r\n        'On',\r\n    ]\r\n\t};\r\n\treturn(\r\n\t\t<div className=\"ActivityDurationMonitor\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Doughnut data={data} options={{  maintainAspectRatio: false, legend:{display:true,position:'left',align:'center'},title:{display:true,text:\"Activity during 24h\",fontColor:\"#fff\"} }}/>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nexport default activityDurationMonitor","import React from 'react'\r\nimport './ActivityStateMonitor.css'\r\n//importing a library that allows to draw charts\r\nimport {Line} from 'react-chartjs-2';\r\n//this is a presentation component,wich mean he is only responsible of rendering the ui,he wont handle any logic,the logic is usaly habdled by a container\r\n//this component recives some properties to render from a container (the parent)\r\n//this component renders the historical  data concerning the activity state during 24 h  of a given module\r\nconst activityStateMonitor=(props)=>{\r\n\tconst activityState=props.activityStateList.map(ele=>ele.isActive)\r\n\tconst labels=props.activityStateList.map(ele=>ele.detectedAt)\r\n\tconst data2={\r\n\t  \tlabels:labels,\r\n\t  \tdatasets: [\r\n\t\t    {\r\n\t\t      label: 'Activity State during  24 h',\r\n\t\t      fill: false,\r\n\t\t      borderColor: 'rgba(75,192,192,1)',\r\n\t\t      pointBorderColor: 'rgba(75,192,192,1)',\r\n\t\t      data: activityState,\r\n\t\t      steppedLine:true\r\n\t\t    }\r\n\t  \t]\r\n\t };\r\n\treturn(\r\n\t\t<div className=\"ActivityStateMonitor\">\r\n\t\t\t<div>\r\n\t\t\t\t<Line data={data2} \r\n\t\t\t\t\toptions={{scales: \r\n\t\t\t\t\t\t{yAxes:[{\r\n                \t\t\tticks: {\r\n                \t\t\t\t\tfontColor:\"white\",\r\n                \t\t\t}\r\n                \t\t}],\r\n                \t\txAxes:[{\r\n\t                \t\tticks: {\r\n\t                \t\t\tfontColor: \"white\",\r\n\t                \t\t},\r\n\t                \t\tgridLines: {\r\n        \t\t\t\t\t\tzeroLineColor: '#fff'\r\n        \t\t\t\t\t}\r\n\t                \t}]\r\n\r\n                \t\t},\r\n                \t\tmaintainAspectRatio: false,\r\n                \t\tlegend: {\r\n            \t\t\t\tdisplay: true,\r\n            \t\t\t\tlabels: {\r\n                \t\t\tfontColor: 'rgb(255, 255, 255)'\r\n            \t\t\t}\r\n        }\r\n                \t}}\r\n             \t />\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t</div>\r\n\t)\r\n\t\r\n}\r\nexport default activityStateMonitor","import React from 'react'\r\nimport './DataMonitor.css'\r\n//importing a library that allows to draw charts\r\nimport {Line} from 'react-chartjs-2';\r\n//this is a presentation component,wich mean he is only responsible of rendering the ui,he wont handle any logic,the logic is usaly habdled by a container\r\n//this component recives some properties to render from a container (the parent)\r\n//this component renders the historical  data concerning the data exchange  during 24 h  of a given module\r\nconst dataMonitor=(props)=>{\r\n\tconst sentData=props.dataList.map(ele=>ele.sentData)\r\n\tconst recivedData=props.dataList.map(ele=>ele.recivedData)\r\n\tconst dates=props.dataList.map(ele=>ele.detectedAt)\r\n\tconsole.log(sentData)\r\n\tconst data3={\r\n  \t\tlabels: dates,\r\n  \t\tdatasets: [\r\n\t\t    {\r\n\t\t      label: 'recived data during 24h',\r\n\t\t      fill: false,\r\n\t\t      borderColor: 'rgba(75,192,192,1)',\r\n\t\t      pointBorderColor: 'rgba(75,192,192,1)',\r\n\t\t      data: recivedData,\r\n\t\t    \r\n\t\t    },\r\n\t\t    {\r\n\t\t      label: 'sent data during  24h',\r\n\t\t      fill: false,\r\n\t\t      borderColor: 'rgb(255,174,25)',\r\n\t\t      pointBorderColor: 'rgb(255,174,25)',\r\n\t\t      data: sentData,\r\n\t\t     \r\n\t\t    }\r\n  \t\t],\r\n  \t\tbackgroundColor:'rgb(255,255,255)'\r\n\t}\r\n\treturn(\r\n\t\t<div className=\"DataMonitor\">\r\n\t\t\t<div>\r\n\t\t\t\t<Line data={data3} \r\n\t\t\t\toptions={\r\n\t\t\t\t\t{scales: \r\n\t\t\t\t\t\t{yAxes: [{\r\n\t                \t\tticks: {\r\n\t                \t\t\tfontColor: \"white\",\r\n\t                \t\t\tsuggestedMin: 0,\r\n\t                \t\t\tsuggestedMax: 100\r\n\t                \t\t},\r\n\t                \t\tgridLines: {\r\n        \t\t\t\t\t\tzeroLineColor: '#fff'\r\n        \t\t\t\t\t}\r\n\t                \t\t}],\r\n\t                \txAxes:[{\r\n\t                \t\tticks: {\r\n\t                \t\t\tfontColor: \"white\",\r\n\t                \t\t},\r\n\t                \t\tgridLines: {\r\n        \t\t\t\t\t\tzeroLineColor: '#fff'\r\n        \t\t\t\t\t}\r\n\t                \t}]\r\n\r\n\t                \t},\r\n\r\n\t               \t \tmaintainAspectRatio: false,\r\n\t                \tlegend: {\r\n            \t\t\t\tdisplay: true,\r\n            \t\t\t\tlabels: {\r\n                \t\t\tfontColor: 'rgb(255, 255, 255)'\r\n            \t\t\t\t}\r\n            \t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default dataMonitor","import React from 'react'\r\nimport './TemperatureMonitor.css'\r\n//importing a library that allows to draw charts\r\nimport {Line} from 'react-chartjs-2';\r\n//this is a presentation component,wich mean he is only responsible of rendering the ui,he wont handle any logic,the logic is usaly habdled by a container\r\n//this component recives some properties to render from a container (the parent)\r\n//this component renders the historical  data concerning the temperature exchange  during 24 h  of a given module\r\nconst temperatureMonitor=(props)=>{\r\n\tconst temperatures=props.temperatureList.map(ele=>ele.temperature)\r\n\tconst labels=props.temperatureList.map(ele=>ele.detectedAt)\r\n\tconst data = {\r\n  \t\tlabels:labels,\r\n  \t\tdatasets: [\r\n\t\t    {\r\n\t\t      label: 'Temperature during one day',\r\n\t\t      fill: false,\r\n\t\t      borderColor: 'rgb(255, 33, 37)',\r\n\t\t      pointBorderColor: 'rgba(75,192,192,1)',\r\n\t\t      data: temperatures,\r\n\t\t    }\r\n  \t\t]\r\n\t}\r\n\treturn(\r\n\t\t<div className=\"TemperatureMonitor\">\r\n\t\t\t<div>\r\n\t\t\t\t<Line data={data} \r\n\t\t\t\t\toptions={{scales: \r\n\t\t\t\t\t\t{yAxes: \r\n\t\t\t\t\t\t\t[{\r\n\t                \t\t\tticks: {\r\n\t                \t\t\t\tfontColor:\"white\",\r\n\t                \t\t\t\tsuggestedMin: 0,\r\n\t                \t\t\t\tsuggestedMax: 50\r\n\t                \t\t\t}\r\n\t                \t\t}],\r\n\t                \txAxes:[{\r\n\t                \t\tticks: {\r\n\t                \t\t\tfontColor: \"white\",\r\n\t                \t\t},\r\n\t                \t\tgridLines: {\r\n        \t\t\t\t\t\tzeroLineColor: '#fff'\r\n        \t\t\t\t\t}\r\n\t                \t}]\r\n\t                \t},\r\n\t                \tmaintainAspectRatio: false,\r\n\t                \tlegend: {\r\n            \t\t\t\tdisplay: true,\r\n            \t\t\t\tlabels: {\r\n                \t\t\tfontColor: 'rgb(255, 255, 255)'\r\n            \t\t\t\t}\r\n            \t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default temperatureMonitor","import React from 'react'\r\nimport './ModuleMonitor.css'\r\n//importing the cpmopnents that builds this component\r\nimport ActivityDurationMonitor from './ActivityDurationMonitor/ActivityDurationMonitor'\r\nimport ActivityStateMonitor from './ActivityStateMonitor/ActivityStateMonitor'\r\nimport DataMonitor from './DataMonitor/DataMonitor'\r\nimport TemperatureMonitor from './TemperatureMonitor/TemperatureMonitor'\r\nimport LoadSprint2 from '../../ui/LoadSprint2/LoadSprint2'\r\nimport ErrorMessage  from '../../ui/ErrorMessage/ErrorMessage'\r\n//this is a presentation component,wich mean he is only responsible of rendering the ui,he wont handle any logic,the logic is usaly habdled by a container\r\n//this component recives some properties to render from a container (the parent)\r\n//this component is a dashboard rendering the historical data of a given Module.\r\nconst moduleMonitor=(props)=>(\r\n\t<div className=\"MyModuleMonitor\">\r\n\t\t{props.loading?<LoadSprint2 />:props.error?<ErrorMessage errorMessage={props.error} />:null}\r\n\t\t{props.shouldMonitorDuration ? <ActivityDurationMonitor durationList={props.activityStateHistory}  /> :null }\r\n\t\t{props.activityStateHistory.length ? <ActivityStateMonitor activityStateList={props.activityStateHistory}/> : null}\r\n\t\t{props.temperatureHistory.length ? <TemperatureMonitor temperatureList={props.temperatureHistory}/> :null }\r\n\t\t{props.dataExchangeHistory.length ? <DataMonitor dataList={props.dataExchangeHistory} /> : null }\r\n\t</div>\r\n\t)\r\nexport default moduleMonitor","import React,{Component} from 'react'\r\nimport './MyModuleDetails.css'\r\nimport api from '../../api/api'\r\n//importing the components building the container MyModuleDetails\r\nimport ModuleInfos from '../../components/MyModuleDetails/ModuleInfos/ModuleInfos'\r\nimport ModuleMonitor from '../../components/MyModuleDetails/ModuleMonitor/ModuleMonitor'\r\n//Redux import ,to access the store (the store is just like a global state accessible by all containers)\r\nimport { connect } from 'react-redux'\r\nimport { loadModuleByIdRequest } from '../../actions'\r\n\r\n//this container is responsible for the interactions with a Module Informations \r\nclass MyModuleDetails extends Component{\r\n\r\n\t//once the page is visble this method will be called,it loads the module information\r\n    componentDidMount(){\r\n       this.props.loadModule(this.props.match.params.id) \r\n    }\r\n    //this method renders the page.\r\n    render(){\r\n        {\r\n            console.log(this.props.error)\r\n        }\r\n\r\n        return(\r\n            <div className=\"MyModuleDetails\">\r\n                <ModuleInfos number={this.props.module&&this.props.module.number} title={this.props.module&&this.props.module.title} type={this.props.module&&this.props.module.type} state={this.props.module&&this.props.module.state} createdAt={this.props.module&&this.props.module.created_at} description={this.props.module&&this.props.module.description} />\r\n                <div className=\"MyModuleStats\">\r\n                    <ModuleMonitor error={this.props.error} loading={this.props.loading} shouldMonitorDuration={this.props.module&& this.props.module.shouldMonitorActivityDuration} temperatureHistory={this.props.temperatureHistory} activityStateHistory={this.props.activityStateHistory} dataExchangeHistory={this.props.dataExchangeHistory}/>\r\n                </div>\r\n            </div>\r\n            )\r\n    }\r\n}\r\n//the properties we load from the store\r\nconst mapStateToProps = state => ({\r\n    module:state.moduleInfos.module,\r\n    loading:state.moduleInfos.loadingModule,\r\n    temperatureHistory:state.moduleInfos.temperatureHistory,\r\n    activityStateHistory:state.moduleInfos.activityStateHistory,\r\n    dataExchangeHistory:state.moduleInfos.dataExchangeHistory,\r\n    error:state.moduleInfos.errorModule\r\n})\r\n//the methods we can use to update the data in the  store\r\nconst mapDispatchToProps = dispatch => ({\r\n    loadModule:(id)=>dispatch(loadModuleByIdRequest(id))\r\n})\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(MyModuleDetails)","import React from 'react'\r\nimport './NotificationItem.css'\r\nimport notificationImage from '../../../assets/images/notification.svg'\r\nimport {Link} from 'react-router-dom'\r\nconst notificationItem=(props)=>{\r\n\tlet classes=[\"NotificationItem\"]\r\n\tconsole.log(props)\r\n\tif(!props.seen){\r\n\r\n\t\tclasses=[\"NotificationItem\",\"ActiveNotification\"]\r\n\t}\r\n\treturn(\r\n\t<Link to={\"/webreathe/notifications/\"+props.id} className={classes.join(\" \")}>\r\n\t\t<div className=\"NotificationItemImage\">\r\n\t\t\t<img src={notificationImage}  />\r\n\t\t</div>\r\n\t\t<div className=\"NotificationItemHeader\">\r\n\t\t\t<h2>{props.type}</h2>\r\n\t\t</div>\r\n\t\t<div  className=\"NotificationItemBody\">\r\n\t\t\t<p>{props.description}</p>\r\n\t\t\t<span>Created at: {props.createdAt}</span>\r\n\t\t</div>\r\n\t</Link>\t\r\n\t)\r\n}\r\nexport default notificationItem","import React from 'react'\r\nimport './NotificationsBody.css'\r\n//importing the components that builds our component\r\nimport LoadingSprint from '../../ui/LoadingSprint/LoadingSprint'\r\nimport ErrorMessage  from '../../ui/ErrorMessage/ErrorMessage'\r\nimport NotificationItem from '../NotificationItem/NotificationItem'\r\n//this is a presentation component,wich mean he is only responsible of rendering the ui,he wont handle any logic,the logic is usaly habdled by a container\r\n//this component recives some properties to render from a container (the parent)\r\n//this component shows the list of notification items.\r\nconst notificationsBody=(props)=>(\r\n\r\n\t<div className=\"NotificationsBody\">\r\n\t\t{props.loading ?<LoadingSprint/> :props.error ? <ErrorMessage errorMessage={props.error}/> : props.notifications.map((notification)=><NotificationItem  key={notification.id} id={notification.id} type={notification.type} description={notification.notificationDescription} seen={notification.seen} createdAt={notification.detectedAt} />)\r\n\t\t}\r\n\t</div>\r\n)\r\nexport default notificationsBody","import React,{Component} from 'react'\r\nimport './Notifications.css'\r\n//importing the components building the container Notification \r\nimport NotificationBody from '../../components/Notifications/NotificationsBody/NotificationsBody'\r\nimport PaginationItems from '../../components/MyModules/PaginationItems/PaginationItems'\r\nimport api from '../../api/api'\r\n//Redux import ,to access the store (the store is just like a global state accessible by all containers)\r\nimport { connect } from 'react-redux'\r\nimport { loadNotificationsRequest } from '../../actions'\r\n\r\nclass Notifications extends Component{\r\n\t//once the page is visble this method will be called,it loads the list of notifications \r\n\tasync componentDidMount(){\r\n\t\tthis.props.loadNotifications(this.props.currentPage)\r\n\t}\r\n\t///this container has support pagination\r\n\tchangePageHandler=async(page)=>{\r\n\t\tthis.props.loadNotifications(page)\r\n\t}\r\n\t//rendering the page.\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div className=\"Notifications\">\r\n\t\t\t\t<NotificationBody notifications={this.props.notifications} error={this.props.error} loading={this.props.loading} />\r\n\t\t\t\t{this.props.count!==1?<PaginationItems currentPage={this.props.currentPage} clicked={this.changePageHandler} count={this.props.count}/>:null}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n//the properties we load from the store\r\nconst mapStateToProps = state => ({\r\n\tnotifications: state.notifications.notifications,\r\n\tloading:state.notifications.loadingNotifications,\r\n\tcount:state.notifications.countNotifications,\r\n\tcurrentPage:state.notifications.pageNotifications,\r\n\terror:state.notifications.errorNotifications\r\n})\r\n//the methods we can use to update the data in the  store\r\nconst mapDispatchToProps = dispatch => ({\r\n\tloadNotifications: page => dispatch(loadNotificationsRequest(page))\r\n})\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(Notifications)","import React from 'react'\r\nimport './NotificationInfos.css'\r\n//importing icons from react icons\r\nimport { FiType } from 'react-icons/fi'\r\nimport { MdDescription } from 'react-icons/md'\r\nimport {IoMdTime} from \"react-icons/io\"\r\n//importing an image from our assets\r\nimport notificationImage from '../../../assets/images/notification1.svg'\r\n//this is a presentation component,wich mean he is only responsible of rendering the ui,he wont handle any logic,the logic is usaly habdled by a container\r\n//this component recives some properties to render from a container (the parent)\r\n//this component shows the informations of a notification.\r\nconst notificationInfos=(props)=>(\r\n\t<div className=\"NotificationInfos\">\r\n\t\t<div className=\"NotificationInfosHeader\">\r\n\t\t\t<img src={notificationImage} />\r\n\t\t\t<h3>Notification Infos</h3>\r\n\t\t</div>\r\n\t\t<div className=\"NotificationInfosBody\">\r\n\t\t\t<h3><FiType/> Type : {props.type}</h3>\r\n\t\t\t<h3><MdDescription/> Description : {props.description}</h3>\r\n\t\t\t<h3><IoMdTime/> Creatd At : {props.createdAt}</h3>\t\r\n\t\t</div>\r\n\r\n\t</div>\r\n)\r\nexport default notificationInfos","import React,{Component}from 'react'\r\nimport './NotificationDetails.css'\r\n//importing the components building the container Notification Details\r\nimport ModuleInfos from '../../components/MyModuleDetails/ModuleInfos/ModuleInfos'\r\nimport NotificationInfos from '../../components/NotificationDetails/NotificationInfos/NotificationInfos'\r\nimport api from '../../api/api'\r\nimport Aux from '../../hoc/Auxilary'\r\nimport LoadSprint2 from '../../components/ui/LoadSprint2/LoadSprint2'\r\nimport ErrorMessage  from '../../components/ui/ErrorMessage/ErrorMessage'\r\n//Redux import ,to access the store (the store is just like a global state accessible by all containers)\r\nimport { connect } from 'react-redux'\r\nimport { loadNotificationByIdRequest } from '../../actions'\r\n\r\nclass NotificationDetails extends Component{\r\n\t//once the page is visble this method will be called,it loads the of notification informations \r\n\tasync componentDidMount(){\r\n\t   this.props.loadNotification(this.props.match.params.id)\r\n\t}\r\n\t//this method is responsible to render the page\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div className=\"NotificationDetails\">\r\n\t\t\t\t{this.props.loading?<LoadSprint2 />:this.props.error?<ErrorMessage errorMessage={this.props.error} />:<Aux>\r\n\t\t\t\t<NotificationInfos type={this.props.notification && this.props.notification.type} description={this.props.notification && this.props.notification.notificationDescription} createdAt={this.props.notification && this.props.notification.detectedAt} />\r\n\t\t\t\t<ModuleInfos number={this.props.module && this.props.module.number} title={this.props.module && this.props.module.title} type={this.props.module && this.props.module.type} state={this.props.module && this.props.module.state} createdAt={this.props.module && this.props.module.created_at} description={this.props.module && this.props.module.description} />\r\n\t\t\t\t</Aux>}\r\n\t\t\t</div>\r\n\t\t\t)\r\n\t}\r\n}\r\n//the properties we load from the store\r\nconst mapStateToProps = state => ({\r\n\tmodule:state.notificationInfos.module,\r\n\tnotification:state.notificationInfos.notification,\r\n\terror:state.notificationInfos.errorNotification,\r\n\tloading:state.notificationInfos.loadingNotification\r\n})\r\n//the methods we can use to update the data in the  store\r\nconst mapDispatchToProps = dispatch => ({\r\n\tloadNotification: id => dispatch(loadNotificationByIdRequest(id))\r\n})\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(NotificationDetails)\r\n","import React,{Component} from 'react'\r\nimport './Layout.css'\r\n//those are the components who constructs this container\r\nimport Header from '../Navigation/Header/Header'\r\nimport NewModule from '../../containers/NewModule/NewModule'\r\nimport MyModules from '../../containers/MyModules/MyModules'\r\nimport MyModuleDetails from '../../containers/MyModuleDetails/MyModuleDetails'\r\nimport Notifications from '../../containers/Notifications/Notifications'\r\nimport NotificationDetails from '../../containers/NotificationDetails/NotificationDetails'\r\nimport Aux from '../../hoc/Auxilary'\r\n//importing the library responsible of handling the navigation in our app\r\nimport {BrowserRouter as Router,Route,Link,Switch} from 'react-router-dom'\r\n\r\nclass Layaout extends Component{\r\n   //this method is responsible to render the page\r\n   //this page is defining the structure of our website.\r\n   //please note that each route call a container ,wich will be displayed.\r\n   /*\r\n    please note  this should be placed with the \r\n    containers,i only missed to place him in the\r\n    containers folder\r\n    */\r\n    render(){\r\n        return(\r\n            <Aux>\r\n               <Router >\r\n                    <Header/>\r\n                     <div className=\"Main\" >\r\n                        <Switch>\r\n                            <Route path=\"/webreathe/\" exact component={MyModules}/>   \r\n                            <Route path=\"/webreathe/newmodule\" exact component={NewModule} />\r\n                            <Route path=\"/webreathe/notifications\" exact component={Notifications}/>\r\n                            <Route path=\"/webreathe/:id\" exact component={MyModuleDetails} />\r\n                            <Route path=\"/webreathe/notifications/:id\" exact component={NotificationDetails} />\r\n                        </Switch>\r\n                    </div>\r\n                </Router>\r\n            </Aux>\r\n        )\r\n    }\r\n    \r\n        \r\n  \r\n  \r\n}\r\nexport default Layaout","import React,{Component} from 'react';\nimport './App.css';\nimport Layaout from '../components/Layout/Layout'\n\nclass App extends Component {\n  render(){\n    return (\n    <div className=\"App\">\n    \t <Layaout></Layaout>\n    </div>\n    \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\n\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { createStore,applyMiddleware } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport rootReducer from './reducers'\nimport rootSagas from './sagas'\nimport './index.css';\nimport App from './containers/App'\nimport * as serviceWorker from './serviceWorker'\n\n\nconst sagaMiddleware = createSagaMiddleware()\nconst store = createStore(\n\trootReducer,\n\tapplyMiddleware(sagaMiddleware)\n)\nsagaMiddleware.run(rootSagas)\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/webreathe.f8759fa3.png\";","module.exports = __webpack_public_path__ + \"static/media/Error.4799c96f.svg\";","module.exports = __webpack_public_path__ + \"static/media/moduleInfos.e3381599.svg\";","module.exports = __webpack_public_path__ + \"static/media/notification.2a8153ef.svg\";","module.exports = __webpack_public_path__ + \"static/media/notification1.99bbd081.svg\";"],"sourceRoot":""}